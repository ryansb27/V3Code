import serial
import tkinter as tk
from tkinter import messagebox

# Serial Setup
ser = serial.Serial('/dev/ttyUSB0', 9600, timeout=1)  # Adjust port as needed

# Function to send RPM and time to Arduino
def send_command():
    try:
        rpm = int(rpm_entry.get())
        time_sec = int(time_entry.get())
        if rpm <= 0 or time_sec <= 0:
            raise ValueError("Enter positive values")
        
        command = f"{rpm} {time_sec}\n"
        ser.write(command.encode())  # Send command
        log_message("Sent: " + command)

    except ValueError:
        messagebox.showerror("Invalid Input", "Please enter valid numbers.")

# Function to read Arduino response
def read_serial():
    if ser.in_waiting > 0:
        response = ser.readline().decode().strip()
        if response.startswith("RPM:"):
            rpm_label.config(text="Current RPM: " + response.split(":")[1])
        elif response == "Motor started":
            status_label.config(text="Motor Running")
        elif response == "Done":
            status_label.config(text="Done")
        log_message("Received: " + response)
    
    root.after(500, read_serial)  # Check every 500ms

# Function to log messages in the GUI
def log_message(msg):
    log_text.insert(tk.END, msg + "\n")
    log_text.see(tk.END)

# GUI Setup
root = tk.Tk()
root.title("Centrifuge Controller")
root.geometry("400x300")

tk.Label(root, text="Target RPM:").pack()
rpm_entry = tk.Entry(root)
rpm_entry.pack()

tk.Label(root, text="Run Time (s):").pack()
time_entry = tk.Entry(root)
time_entry.pack()

send_button = tk.Button(root, text="Start", command=send_command)
send_button.pack()

status_label = tk.Label(root, text="Status: Idle", fg="blue")
status_label.pack()

rpm_label = tk.Label(root, text="Current RPM: ---")
rpm_label.pack()

log_text = tk.Text(root, height=8, width=40)
log_text.pack()

# Start Serial Reading Loop
root.after(500, read_serial)

root.mainloop()
